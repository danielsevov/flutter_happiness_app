// Mocks generated by Mockito 5.3.2 from annotations
// in happiness_app/test/data/odoo_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:odoo_rpc/src/odoo_client.dart' as _i4;
import 'package:odoo_rpc/src/odoo_session.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseClient_0 extends _i1.SmartFake implements _i2.BaseClient {
  _FakeBaseClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOdooSession_1 extends _i1.SmartFake implements _i3.OdooSession {
  _FakeOdooSession_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OdooClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockOdooClient extends _i1.Mock implements _i4.OdooClient {
  MockOdooClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseURL => (super.noSuchMethod(
        Invocation.getter(#baseURL),
        returnValue: '',
      ) as String);
  @override
  set baseURL(String? _baseURL) => super.noSuchMethod(
        Invocation.setter(
          #baseURL,
          _baseURL,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get frontendLang => (super.noSuchMethod(
        Invocation.getter(#frontendLang),
        returnValue: '',
      ) as String);
  @override
  set frontendLang(String? _frontendLang) => super.noSuchMethod(
        Invocation.setter(
          #frontendLang,
          _frontendLang,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.BaseClient get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeBaseClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.BaseClient);
  @override
  set httpClient(_i2.BaseClient? _httpClient) => super.noSuchMethod(
        Invocation.setter(
          #httpClient,
          _httpClient,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Stream<_i3.OdooSession> get sessionStream => (super.noSuchMethod(
        Invocation.getter(#sessionStream),
        returnValue: _i5.Stream<_i3.OdooSession>.empty(),
      ) as _i5.Stream<_i3.OdooSession>);
  @override
  _i5.Stream<_i4.OdooLoginEvent> get loginStream => (super.noSuchMethod(
        Invocation.getter(#loginStream),
        returnValue: _i5.Stream<_i4.OdooLoginEvent>.empty(),
      ) as _i5.Stream<_i4.OdooLoginEvent>);
  @override
  _i5.Stream<bool> get inRequestStream => (super.noSuchMethod(
        Invocation.getter(#inRequestStream),
        returnValue: _i5.Stream<bool>.empty(),
      ) as _i5.Stream<bool>);
  @override
  _i5.Future<dynamic> get inRequestStreamDone => (super.noSuchMethod(
        Invocation.getter(#inRequestStreamDone),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<dynamic> callRPC(
    dynamic path,
    dynamic funcName,
    dynamic params,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #callRPC,
          [
            path,
            funcName,
            params,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> callKw(dynamic params) => (super.noSuchMethod(
        Invocation.method(
          #callKw,
          [params],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<_i3.OdooSession> authenticate(
    String? db,
    String? login,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [
            db,
            login,
            password,
          ],
        ),
        returnValue: _i5.Future<_i3.OdooSession>.value(_FakeOdooSession_1(
          this,
          Invocation.method(
            #authenticate,
            [
              db,
              login,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i3.OdooSession>);
  @override
  _i5.Future<void> destroySession() => (super.noSuchMethod(
        Invocation.method(
          #destroySession,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<dynamic> checkSession() => (super.noSuchMethod(
        Invocation.method(
          #checkSession,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
}
